Запуск и Использование Приложения
Эти шаги нужно выполнять каждый раз, когда вы хотите запустить приложение.
Шаг 1: Настройка Переменных Окружения
Исполняемый файл не содержит в себе ключи API. Их нужно предоставить перед запуском.

PS C:\AgentFlow_2\agentflow_mvp> $env:GEMINI_API_KEY="AIzaSyBUQPuEZRuGnxcXEeepDy8wWf4uHmv3mrI"
PS C:\AgentFlow_2\agentflow_mvp> $env:MOCK_MODE="false"

Создайте файл .env в том же каталоге, где находится agentflow-launcher.exe.
Заполните файл .env вашими реальными данными:
code
Ini
# agentflow_mvp/.env

# Установите false для использования реального Gemini API
MOCK_MODE=false

# Вставьте ваш ключ, полученный из Google AI Studio
GEMINI_API_KEY="ВАШ_КЛЮЧ_ИЗ_AI_STUDIO"

# Максимальное количество автоматических попыток исправления
MAX_RETRY_ATTEMPTS=3

# Оставьте false для нормальной работы
FORCE_GUARD_FAIL=false
Шаг 2: Запуск agentflow-launcher.exe
Теперь вы можете запустить приложение одним из двух способов:
Способ A (Рекомендуемый, с логами): Через Терминал
Откройте терминал в каталоге проекта и запустите .exe:
code
Bash
# Просто запустите исполняемый файл
.\agentflow-launcher.exe
Преимущества: Вы будете видеть все логи работы сервера, включая статусы агентов, API-вызовы и возможные ошибки, прямо в окне терминала.
Остановка: Чтобы остановить приложение, нажмите Ctrl + C в окне терминала.
Способ B (Простой, без логов): Двойным щелчком
Просто найдите файл agentflow-launcher.exe в Проводнике Windows и дважды щелкните по нему. Приложение запустится в фоновом режиме.
Недостатки: Вы не увидите логи работы. Если что-то пойдет не так, вы не сможете это диагностировать.
Остановка: Чтобы остановить приложение, запущенное таким образом, откройте Диспетчер задач (Ctrl + Shift + Esc), найдите процесс agentflow-launcher.exe и завершите его.
Шаг 3: Использование Панели Управления
После запуска приложения (любым из способов), откройте ваш веб-браузер (Google Chrome, Firefox и т.д.) и перейдите по адресу:
http://localhost:3000
Вы увидите Панель Управления AgentFlow и сможете:
Запускать новые задачи, заполняя форму.
Мониторить выполнение в реальном времени через DAG и список задач.
Редактировать план публикаций, вводить метрики и запускать перегенерацию контента.
Вмешиваться в процесс, если система достигла лимита автоматических исправлений или ожидает вашего одобрения.
Поздравляю! Теперь у вас есть полностью автономное, упакованное и готовое к работе приложение AgentFlow.

Диагностика неполадок запуска на другой машине
1. Проверка распаковки ресурсов
   * Запустите исполняемый файл из терминала с переменной `AGENTFLOW_DEBUG_PATHS=1`:
     ````
     set AGENTFLOW_DEBUG_PATHS=1
     agentflow-launcher.exe
     ````
   * В выводе ищите строки `[AgentFlow][Paths][probe]`. Если для путей `...\plans\dag.json` и `...\public` указано `false`, то рядом с `.exe` отсутствуют необходимые папки. Убедитесь, что файл был собран заново и что в каталоге рядом с `agentflow-launcher.exe` есть папки `plans` и `public`.
2. Проверка наличия `.env`
   * При первой строке `[AgentFlow][Paths][probe] ...\.env true/false` видно, найден ли файл окружения. Если значение `false`, создайте `.env` рядом с `.exe` и пропишите ключи API по образцу выше.
3. Проверка каталога данных
   * Если в логе появляется предупреждение `[AgentFlow] Не удалось создать каталог данных ...`, запустите терминал от имени администратора или задайте путь явно через переменную `AGENTFLOW_DATA_DIR`:
     ````
     set AGENTFLOW_DATA_DIR=C:\\AgentFlowData
     ````
4. Тест статического контента
   * После запуска откройте в браузере `http://localhost:3000`. Если страница пустая, убедитесь по шагу 1, что директория `public` была распакована. При необходимости скопируйте папки `public` и `plans` из исходного архива вручную в каталог с `agentflow-launcher.exe`.
5. Сеть и прокси
   * Если вы используете прокси, но не установили `socks-proxy-agent`, появится предупреждение. Или установите пакет в среде сборки, или очистите переменные `HTTP_PROXY`, `HTTPS_PROXY`, `ALL_PROXY`, чтобы приложение работало напрямую.